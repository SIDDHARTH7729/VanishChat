// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  clerkId      String    @unique
  email       String     @unique
  username    String     @unique
  showname    Boolean    @default(false)
  posts       Post[]
  likes       Like[]
  activities  Activity[]
  notifications Notification[]
  createdAt   DateTime   @default(now())
}

model Post {
  id         String    @id @default(cuid())
  content    String
  isVisible  Boolean   @default(true)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  likes      Like[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  @@unique([userId, postId])
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  postId    String?
  createdAt DateTime @default(now())
}

model Activity {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String   // "LIKE", "NEW_POST", "COMMENT", etc.
  postId    String?  // Nullable (e.g., for non-post activities)
  createdAt DateTime @default(now())
}
